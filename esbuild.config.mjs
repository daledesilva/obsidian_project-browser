import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules';
import {sassPlugin} from 'esbuild-sass-plugin'
import { copy } from 'esbuild-plugin-copy';


// import renamePlugin from "./rename-plugin";
import fs from 'fs';

const renamePlugin = () => ({
	name: 'rename-plugin',
	setup(build) {
		build.onEnd(async () => {
			try {
				fs.renameSync('./dist/main.css', './dist/styles.css');
			} catch (e) {
				console.error('Failed to main.css to styles.css file:', e);
			}
		});
	},
});

const copyManifestPlugin = () => ({
	name: 'copy-manifest-plugin',
	setup(build) {
		build.onEnd(async () => {
			try {
				fs.copyFileSync('./manifest.json', './dist/manifest.json');
			} catch (e) {
				console.error('Failed to copy manifest.json to dist:', e);
			}
		});
	},
});



const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const prod = (process.argv[2] === 'production');

esbuild.build({
	banner: {
		js: banner,
	},
	entryPoints: ['./src/main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/view',
		'@lezer/common',
		'@lezer/highlight',
		'@lezer/lr',
		...builtins],
	format: 'cjs',
	watch: !prod,
	target: 'es2018',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outdir: './dist',
	plugins: [
		sassPlugin({
			filter:	/.(s[ac]ss|css)$/,
		}),
		copy({
		  resolveFrom: 'cwd',	// Returns name of current working directory
			assets: {
				from: ['./src/static/**/*'],
				to: ['./dist'],
			},
		}),
		
		// Enables manifest.json to live in root as that's the Obsidian expects in a repository, and this copies it to dist on build
		copyManifestPlugin(),
		// Renames main.css to styles.css as that's what obsidian expects
		renamePlugin(),

	],
}).catch(() => process.exit(1));


